# This workflow is meant to be used to build plugin compatible with composer without store

on:
  workflow_call:
    inputs:
      PLUGIN_NAME:
        description: 'Your plugin name'
        required: true
        type: string
    secrets:
      GITHUB_TOKEN:
        required: true

env:
  PLUGIN_NAME: ${{ inputs.PLUGIN_NAME }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pluginDeploy:
    container: ghcr.io/friendsofshopware/platform-plugin-dev:v6.4.0
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          path: ${{ env.PLUGIN_NAME }}

      - name: Build & create zip
        run: |
          if test -f "./${PLUGIN_NAME}/src/Resources/app/administration/package.json"; then
              npm install --prefix "./${PLUGIN_NAME}/src/Resources/app/administration/"
          fi

          if test -f "./${PLUGIN_NAME}/src/Resources/app/storefront/package.json"; then
              npm install --prefix "./${PLUGIN_NAME}/src/Resources/app/storefront/"
          fi

          if test -f "./${PLUGIN_NAME}/src/Resources/app/package.json"; then
              npm install --prefix "./${PLUGIN_NAME}/src/Resources/app/"
          fi

          cp -r "./${PLUGIN_NAME}" "/plugins/${PLUGIN_NAME}"

          start-mysql
          pack-plugin "${PLUGIN_NAME}"

      - name: Upload Artefact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PLUGIN_NAME }}
          path: ${{ env.PLUGIN_NAME }}.zip

      - name: Unzip
        run: |
          unzip -o -q "${PLUGINNAME}.zip" -d ./toDeploy
          mv ./toDeploy/*/* ./${PLUGIN_NAME}
          rm -rf ./toDeploy

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          cd ./${PLUGIN_NAME}
          git add -f *
          git commit -m "Build release"

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ env.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}