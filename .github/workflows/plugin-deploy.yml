on:
  workflow_call:
    inputs:
      PLUGIN_NAME:
        description: 'Your plugin name'
        required: true
        type: string
    secrets:
      GITHUB_TOKEN:
        required: true
      ACCOUNT_USER:
        required: true
      ACCOUNT_PASSWORD:
        required: true

env:
  PLUGIN_NAME: ${{ inputs.PLUGIN_NAME }}
  ACCOUNT_USER: ${{ secrets.ACCOUNT_USER }}
  ACCOUNT_PASSWORD: ${{ secrets.ACCOUNT_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pluginDeploy:
    container: ghcr.io/friendsofshopware/platform-plugin-dev:v6.4.0
    runs-on: ubuntu-latest
    steps:
      -   name: Checkout
          uses: actions/checkout@v2.3.1
          with:
            path: ${{ env.PLUGIN_NAME }}

      -   name: Build & create zip
          run: |
            if test -f "./${PLUGIN_NAME}/src/Resources/app/administration/package.json"; then
                npm install --prefix "./${PLUGIN_NAME}/src/Resources/app/administration/"
            fi

            if test -f "./${PLUGIN_NAME}/src/Resources/app/storefront/package.json"; then
                npm install --prefix "./${PLUGIN_NAME}/src/Resources/app/storefront/"
            fi

            if test -f "./${PLUGIN_NAME}/src/Resources/app/package.json"; then
                npm install --prefix "./${PLUGIN_NAME}/src/Resources/app/"
            fi

            cp -r "./${PLUGIN_NAME}" "/plugins/${PLUGIN_NAME}"

            start-mysql
            pack-plugin "${PLUGIN_NAME}"

      -   name: Upload Artefact
          uses: actions/upload-artifact@v2
          with:
            name: ${{ env.PLUGIN_NAME }}
            path: ${{ env.PLUGIN_NAME }}.zip

      -   name: Validate Zip
          run: plugin-uploader ext:validate $(pwd)/${PLUGIN_NAME}.zip

      -   name: StoreUpdate
          if: startsWith(github.ref, 'refs/tags/') || contains(github.event.head_commit.message, '[store update]')
          run: plugin-uploader ext:update $(pwd)/${PLUGIN_NAME}/

      -   name: StoreUpload
          if: startsWith(github.ref, 'refs/tags/')
          run: plugin-uploader ext:upload $(pwd)/${PLUGIN_NAME}.zip --createRelease
          env:
            GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}