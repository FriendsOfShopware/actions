# This workflow is meant to be used to build compatible plugin  with composer without shopware store

on:
  workflow_call:
    inputs:
      extensionName:
        description: 'Your extension name'
        required: true
        type: string
      shopwareVersion:
        description: 'The shopware version to build the extension with'
        required: false
        type: string
        default: '6.4.0'
    secrets:
      ghToken:
        required: true

env:
  EXTENSION_NAME: ${{ inputs.extensionName }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Build:
    container: ghcr.io/friendsofshopware/platform-plugin-dev:v${{ inputs.shopwareVersion }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1

      - name: Build & create zip
        run: |
          if test -f "./src/Resources/app/administration/package.json"; then
              npm install --prefix "./src/Resources/app/administration/"
          fi

          if test -f "./src/Resources/app/storefront/package.json"; then
              npm install --prefix "./src/Resources/app/storefront/"
          fi

          if test -f "./src/Resources/app/package.json"; then
              npm install --prefix "./src/Resources/app/"
          fi

          rm -rf ./.github
          cp -r "./" "/plugins/${EXTENSION_NAME}"

          start-mysql
          plugin-uploader ext:prepare /plugins/${EXTENSION_NAME}/
          pack-plugin "${EXTENSION_NAME}"

      - name: Upload Artefact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.EXTENSION_NAME }}
          path: ${{ env.EXTENSION_NAME }}.zip

      - name: Unzip
        run: |
          unzip -o -q "${EXTENSION_NAME}.zip" -d ./toDeploy
          find ./ -maxdepth 1 ! -name "toDeploy" ! -name ".git" ! -name "." ! -name ".." -exec rm -rf {} \;
          mv ./toDeploy/${EXTENSION_NAME}/* ./
          rm -rf ./toDeploy

      - name: Get version
        run: |
          echo "EXTENSION_VERSION=$(jq ".version" composer.json -r)" >> $GITHUB_ENV

      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: ${{ env.EXTENSION_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog
        if: steps.checkTag.outputs.exists != 'true'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          tag_prefix: ""
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ env.EXTENSION_VERSION }}
          dry_run: true

      - name: commit
        if: steps.checkTag.outputs.exists != 'true'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add -f *
          git commit -m "chore: Build release"
          git tag ${EXTENSION_VERSION}
          git push origin ${EXTENSION_VERSION}

      - name: Create a GitHub release
        if: steps.checkTag.outputs.exists != 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.EXTENSION_VERSION }}
          name: ${{ env.EXTENSION_VERSION }}
          body: ${{ steps.tag_version.outputs.changelog }}